/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package tictactoe;

import javax.swing.JOptionPane;

/**
 *
 * @author H.P. Asela
 */
public class GUI extends javax.swing.JFrame {

    int diff;
    int comp;
    String name;
    Database DB=new Database();
    Game newGame = new Game();
    String character="X";
    int gameMode;
    
    String player1name;
    String player2name;

    public GUI() {
        initComponents();
        setLocationRelativeTo(null);
         
           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        b01 = new javax.swing.JButton();
        b00 = new javax.swing.JButton();
        b12 = new javax.swing.JButton();
        b02 = new javax.swing.JButton();
        b20 = new javax.swing.JButton();
        b11 = new javax.swing.JButton();
        b10 = new javax.swing.JButton();
        b22 = new javax.swing.JButton();
        b21 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        b01.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        b01.setForeground(new java.awt.Color(255, 0, 0));
        b01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b01ActionPerformed(evt);
            }
        });

        b00.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        b00.setForeground(new java.awt.Color(255, 0, 0));
        b00.setPreferredSize(new java.awt.Dimension(50, 25));
        b00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b00ActionPerformed(evt);
            }
        });

        b12.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        b12.setForeground(new java.awt.Color(255, 0, 0));
        b12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b12ActionPerformed(evt);
            }
        });

        b02.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        b02.setForeground(new java.awt.Color(255, 0, 0));
        b02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b02ActionPerformed(evt);
            }
        });

        b20.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        b20.setForeground(new java.awt.Color(255, 0, 0));
        b20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b20ActionPerformed(evt);
            }
        });

        b11.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        b11.setForeground(new java.awt.Color(255, 0, 0));
        b11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b11ActionPerformed(evt);
            }
        });

        b10.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        b10.setForeground(new java.awt.Color(255, 0, 0));
        b10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b10ActionPerformed(evt);
            }
        });

        b22.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        b22.setForeground(new java.awt.Color(255, 0, 0));
        b22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b22ActionPerformed(evt);
            }
        });

        b21.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        b21.setForeground(new java.awt.Color(255, 0, 0));
        b21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b21ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(b00, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b01, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b02, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(b11, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(b21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(b12, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(b22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b02, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b01, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b00, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(b20, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                    .addComponent(b22, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                    .addComponent(b21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem1.setText("New Game");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("About");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem3.setText("Game");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Records");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
      int option = JOptionPane.showConfirmDialog(rootPane, "Are You Sure?", "Start New Game.", JOptionPane.YES_NO_OPTION, 1);
        if (option == JOptionPane.YES_OPTION) {
            this.dispose();
            HomePage homepage=new HomePage();
            homepage.setVisible(true);
        }  
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        int option = JOptionPane.showConfirmDialog(rootPane, "Are You Sure?", "Exit Game.", JOptionPane.YES_NO_OPTION, 1);
        if (option == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    public void setwin()  {
        String newname="Hello "+name;        
        JOptionPane.showMessageDialog(null,"Congratulations!!! You Won The Game!!!",newname,JOptionPane.PLAIN_MESSAGE);
        this.jPanel1.setVisible(false);     
        try{
            String difficulty=null;
            if(diff==1){
                difficulty="Easy";
            } 
            else if(diff==3){
                difficulty="Medium";
            } 
             else if(diff==4){
                difficulty="Hard";
            } 
        DB.insertdetails(name,"Won",difficulty);}
        catch(Exception e){
            System.out.println(""+e.getMessage());
        }
       
        
    }

    public void setlose() {
        String newname="Hello "+name;
        JOptionPane.showMessageDialog(null,"Computer Won The Game!!! Give It A Try Again!!!",newname,JOptionPane.PLAIN_MESSAGE);
        this.jPanel1.setVisible(false);
        try{
            String difficulty=null;
            if(diff==1){
                difficulty="Easy";
            } 
            else if(diff==3){
                difficulty="Medium";
            } 
             else if(diff==4){
                difficulty="Hard";
            } 
        DB.insertdetails(name,"Lost",difficulty);}
        catch(Exception e){
             System.out.println(""+e.getMessage());
        }
       
    }

    public void setdraw() {
       String newname="Hello "+name;
        JOptionPane.showMessageDialog(null,"The Game Is Draw!!! Give It A Try Again!!!",newname,JOptionPane.PLAIN_MESSAGE);       
        this.jPanel1.setVisible(false);
        try{
          String difficulty=null;
            if(diff==1){
                difficulty="Easy";
            } 
            else if(diff==3){
                difficulty="Medium";
            } 
             else if(diff==4){
                difficulty="Hard";
            }  
        DB.insertdetails(name,"Draw",difficulty);}
        catch(Exception e){
             System.out.println(""+e.getMessage());
        }      

    }
    public void setplayer1win(){
        JOptionPane.showMessageDialog(null,"      "+player1name+" Won The Game.","Game Over!!",JOptionPane.PLAIN_MESSAGE);       
        this.jPanel1.setVisible(false);
        try{
        DB.insertdetailsTwoplayers(player1name,player2name,player1name);}
        catch(Exception e){
            System.out.println(""+e.getMessage());
        }
    }
    public void setplayer2win(){
        JOptionPane.showMessageDialog(null,"      "+player2name+" Won The Game.","Game Over!!",JOptionPane.PLAIN_MESSAGE);       
        this.jPanel1.setVisible(false);
        try{
        DB.insertdetailsTwoplayers(player1name,player2name,player2name);}
        catch(Exception e){
            System.out.println(""+e.getMessage());
        }
    }
public void settwoplayersdraw(){
        JOptionPane.showMessageDialog(null,"      "+"Game Is Draw.","Game Over!!",JOptionPane.PLAIN_MESSAGE);       
        this.jPanel1.setVisible(false);
        try{
        DB.insertdetailsTwoplayers(player1name,player2name,"Draw");}
        catch(Exception e){
            System.out.println(""+e.getMessage());
        }
    }
    void getBname() {
        String butt = newGame.evaluate(diff);
        if (butt.equals("b00")) {
            b00.setText("O");
            b00.setEnabled(false);
        }
        if (butt.equals("b01")) {
            b01.setText("O");
            b01.setEnabled(false);
        }
        if (butt.equals("b02")) {
            b02.setText("O");
            b02.setEnabled(false);
        }
        if (butt.equals("b10")) {
            b10.setText("O");
            b10.setEnabled(false);
        }
        if (butt.equals("b11")) {
            b11.setText("O");
            b11.setEnabled(false);
        }
        if (butt.equals("b12")) {
            b12.setText("O");
            b12.setEnabled(false);
        }
        if (butt.equals("b20")) {
            b20.setText("O");
            b20.setEnabled(false);
        }
        if (butt.equals("b21")) {
            b21.setText("O");
            b21.setEnabled(false);
        }
        if (butt.equals("b22")) {
            b22.setText("O");
            b22.setEnabled(false);
        }
    }

    void ValidateforO() {
        String s = "O";
        int var = 0;
        if(gameMode==1){
        while (true) {
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[0][i] != s) {
                    break;

                }
                if (i == 2) {
                    var = 1;
                    setlose();

                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[1][i] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setlose();

                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[2][i] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setlose();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[i][0] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setlose();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[i][1] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setlose();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[i][2] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setlose();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[i][i] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setlose();
                }
            }
            if (var == 1) {
                break;
            }
            if (newGame.buttons[0][2] == s && newGame.buttons[1][1] == s && newGame.buttons[2][0] == s) {
                var = 1;
                setlose();
            }
            if (var == 1) {
                break;
            }
            int k = 0;
            for (int i = 0; i < 3; i++) {
                for (int j = 0; j < 3; j++) {
                    if (newGame.buttons[i][j] != null) {
                        k++;
                    }
                }
            }

            if (k == 9) {
                var = 1;
                setdraw();
            }
            if (var == 1) {
                break;
            }
            break;
        }}
        else if (gameMode==2){
            while (true) {
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[0][i] != s) {
                    break;

                }
                if (i == 2) {
                    var = 1;
                    setplayer2win();

                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[1][i] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setplayer2win();

                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[2][i] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setplayer2win();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[i][0] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setplayer2win();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[i][1] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setplayer2win();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[i][2] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setplayer2win();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[i][i] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setplayer2win();
                }
            }
            if (var == 1) {
                break;
            }
            if (newGame.buttons[0][2] == s && newGame.buttons[1][1] == s && newGame.buttons[2][0] == s) {
                var = 1;
                setplayer2win();
            }
            if (var == 1) {
                break;
            }
            int k = 0;
            for (int i = 0; i < 3; i++) {
                for (int j = 0; j < 3; j++) {
                    if (newGame.buttons[i][j] != null) {
                        k++;
                    }
                }
            }

            if (k == 9) {
                var = 1;
                settwoplayersdraw();
            }
            if (var == 1) {
                break;
            }
            break;
        }
        }
    }

    void ValidateforX() {
        String s = "X";
        int var = 0;
        if(gameMode==1){
        while (true) {
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[0][i] != s) {
                    break;
                }
                if (i == 2) {
                    comp = 1;
                    var = 1;
                    setwin();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[1][i] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    comp = 1;
                    setwin();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[2][i] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    comp = 1;
                    setwin();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[i][0] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    comp = 1;
                    setwin();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[i][1] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    comp = 1;
                    setwin();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[i][2] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    comp = 1;
                    setwin();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[i][i] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    comp = 1;
                    setwin();
                }
            }
            if (var == 1) {
                break;
            }
            if (newGame.buttons[0][2] == s && newGame.buttons[1][1] == s && newGame.buttons[2][0] == s) {
                comp = 1;
                var = 1;
                setwin();
            }
            if (var == 1) {
                break;
            }
            int k = 0;
            for (int i = 0; i < 3; i++) {
                for (int j = 0; j < 3; j++) {
                    if (newGame.buttons[i][j] != null) {
                        k++;
                    }
                }
            }

            if (k == 9) {
                var = 1;
                comp = 1;
                setdraw();
            }
            if (var == 1) {
                break;
            }
            break;
        }}
        else if(gameMode==2){
            while (true) {
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[0][i] != s) {
                    break;

                }
                if (i == 2) {
                    var = 1;
                    setplayer1win();

                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[1][i] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setplayer1win();

                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[2][i] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setplayer1win();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[i][0] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setplayer1win();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[i][1] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setplayer1win();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[i][2] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setplayer1win();
                }
            }
            if (var == 1) {
                break;
            }
            for (int i = 0; i < 3; i++) {
                if (newGame.buttons[i][i] != s) {
                    break;
                }
                if (i == 2) {
                    var = 1;
                    setplayer1win();
                }
            }
            if (var == 1) {
                break;
            }
            if (newGame.buttons[0][2] == s && newGame.buttons[1][1] == s && newGame.buttons[2][0] == s) {
                var = 1;
                setplayer1win();
            }
            if (var == 1) {
                break;
            }
            int k = 0;
            for (int i = 0; i < 3; i++) {
                for (int j = 0; j < 3; j++) {
                    if (newGame.buttons[i][j] != null) {
                        k++;
                    }
                }
            }

            if (k == 9) {
                var = 1;
                settwoplayersdraw();
            }
            if (var == 1) {
                break;
            }
            break;
        }
        }

    }
    private void b00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b00ActionPerformed
        // TODO add your handling code here:
        if(gameMode==1){
        b00.setText("X");
        newGame.buttons[0][0] = "X";
        b00.setEnabled(false);
        ValidateforX();
        int k = 0;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (newGame.buttons[i][j] != null) {
                    k++;
                }
            }
        }
        if (k < 9 && comp == 0) {
            getBname();
            ValidateforO();
        }}
    else if(gameMode==2){
            if(character=="X"){
                b00.setText("X");

            newGame.buttons[0][0] = "X";
            b00.setEnabled(false);
            character="O";
            ValidateforX();
            }
            else if(character=="O"){
                b00.setText("O");

            newGame.buttons[0][0] = "O";
            b00.setEnabled(false);
            character="X";
            ValidateforO();
            }
        }

    }//GEN-LAST:event_b00ActionPerformed

    private void b10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b10ActionPerformed
        // TODO add your handling code here:
        if(gameMode==1){
        b10.setText("X");
        newGame.buttons[1][0] = "X";
        b10.setEnabled(false);
        ValidateforX();
        int k = 0;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (newGame.buttons[i][j] != null) {
                    k++;
                }
            }
        }
        if (k < 9 && comp == 0) {
            getBname();
            ValidateforO();
        }}
else if(gameMode==2){
            if(character=="X"){
                b10.setText("X");

            newGame.buttons[1][0] = "X";
            b10.setEnabled(false);
            character="O";
            ValidateforX();
            }
            else if(character=="O"){
                b10.setText("O");

            newGame.buttons[1][0] = "O";
            b10.setEnabled(false);
            character="X";
            ValidateforO();
            }
        }

    }//GEN-LAST:event_b10ActionPerformed

    private void b11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b11ActionPerformed
        // TODO add your handling code here:
        if(gameMode==1){
        b11.setText("X");

        newGame.buttons[1][1] = "X";
        b11.setEnabled(false);
        ValidateforX();
        int k = 0;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (newGame.buttons[i][j] != null) {
                    k++;
                }
            }
        }
        if (k < 9 && comp == 0) {
            getBname();
            ValidateforO();
        }}
        else if(gameMode==2){
            if(character=="X"){
                b11.setText("X");

            newGame.buttons[1][1] = "X";
            b11.setEnabled(false);
            character="O";
            ValidateforX();
            }
            else if(character=="O"){
                b11.setText("O");

            newGame.buttons[1][1] = "O";
            b11.setEnabled(false);
            character="X";
            ValidateforO();
            }
        }
    }//GEN-LAST:event_b11ActionPerformed

    private void b01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b01ActionPerformed
        // TODO add your handling code here:
        if(gameMode==1){
        b01.setText("X");
        newGame.buttons[0][1] = "X";
        b01.setEnabled(false);
        ValidateforX();
        int k = 0;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (newGame.buttons[i][j] != null) {
                    k++;
                }
            }
        }
        if (k < 9 && comp == 0) {
            getBname();
            ValidateforO();
        }}
else if(gameMode==2){
            if(character=="X"){
                b01.setText("X");

            newGame.buttons[0][1] = "X";
            b00.setEnabled(false);
            character="O";
            ValidateforX();
            }
            else if(character=="O"){
                b01.setText("O");

            newGame.buttons[0][1] = "O";
            b01.setEnabled(false);
            character="X";
            ValidateforO();
            }
        }
    }//GEN-LAST:event_b01ActionPerformed

    private void b02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b02ActionPerformed
        // TODO add your handling code here:
        if(gameMode==1){
        b02.setText("X");
        newGame.buttons[0][2] = "X";
        b02.setEnabled(false);
        ValidateforX();
        int k = 0;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (newGame.buttons[i][j] != null) {
                    k++;
                }
            }
        }
        if (k < 9 && comp == 0) {
            getBname();
            ValidateforO();
        }}
else if(gameMode==2){
            if(character=="X"){
                b02.setText("X");

            newGame.buttons[0][2] = "X";
            b02.setEnabled(false);
            character="O";
            ValidateforX();
            }
            else if(character=="O"){
                b02.setText("O");

            newGame.buttons[0][2] = "O";
            b02.setEnabled(false);
            character="X";
            ValidateforO();
            }
        }
    }//GEN-LAST:event_b02ActionPerformed

    private void b12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b12ActionPerformed
        // TODO add your handling code here:
        if(gameMode==1){
        b12.setText("X");
        newGame.buttons[1][2] = "X";
        b12.setEnabled(false);
        ValidateforX();
        int k = 0;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (newGame.buttons[i][j] != null) {
                    k++;
                }
            }
        }
        if (k < 9 && comp == 0) {
            getBname();
            ValidateforO();
        }}
        else if(gameMode==2){
            if(character=="X"){
                b12.setText("X");

            newGame.buttons[1][2] = "X";
            b12.setEnabled(false);
            character="O";
            ValidateforX();
            }
            else if(character=="O"){
                b12.setText("O");

            newGame.buttons[1][2] = "O";
            b12.setEnabled(false);
            character="X";
            ValidateforO();
            }
        }
    }//GEN-LAST:event_b12ActionPerformed

    private void b20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b20ActionPerformed
        // TODO add your handling code here:
        if(gameMode==1){
        b20.setText("X");
        newGame.buttons[2][0] = "X";
        b20.setEnabled(false);
        ValidateforX();
        int k = 0;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (newGame.buttons[i][j] != null) {
                    k++;
                }
            }
        }
        if (k < 9 && comp == 0) {
            getBname();
            ValidateforO();
        }}
        else if(gameMode==2){
            if(character=="X"){
                b20.setText("X");

            newGame.buttons[2][0] = "X";
            b20.setEnabled(false);
            character="O";
            ValidateforX();
            }
            else if(character=="O"){
                b20.setText("O");

            newGame.buttons[2][0] = "O";
            b20.setEnabled(false);
            character="X";
            ValidateforO();
            }
        }
    }//GEN-LAST:event_b20ActionPerformed

    private void b21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b21ActionPerformed
        // TODO add your handling code here:
        if(gameMode==1){
        b21.setText("X");
        newGame.buttons[2][1] = "X";
        b21.setEnabled(false);
        ValidateforX();
        int k = 0;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (newGame.buttons[i][j] != null) {
                    k++;
                }
            }
        }
        if (k < 9 && comp == 0) {
            getBname();
            ValidateforO();
        }}
        else if(gameMode==2){
            if(character=="X"){
                b21.setText("X");

            newGame.buttons[2][1] = "X";
            b21.setEnabled(false);
            character="O";
            ValidateforX();
            }
            else if(character=="O"){
                b21.setText("O");

            newGame.buttons[2][1] = "O";
            b21.setEnabled(false);
            character="X";
            ValidateforO();
            }
        }
    }//GEN-LAST:event_b21ActionPerformed

    private void b22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b22ActionPerformed
        // TODO add your handling code here:
        if(gameMode==1){
        b22.setText("X");
        newGame.buttons[2][2] = "X";
        b22.setEnabled(false);
        ValidateforX();
        int k = 0;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (newGame.buttons[i][j] != null) {
                    k++;
                }
            }
        }
        if (k < 9 && comp == 0) {
            getBname();
            ValidateforO();
        }}
        else if(gameMode==2){
            if(character=="X"){
                b22.setText("X");

            newGame.buttons[2][2] = "X";
            b22.setEnabled(false);
            character="O";
            ValidateforX();
            }
            else if(character=="O"){
                b22.setText("O");

            newGame.buttons[2][2] = "O";
            b22.setEnabled(false);
            character="X";
            ValidateforO();
            }
        }
    }//GEN-LAST:event_b22ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        Credits cre=new Credits();
        cre.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        Records record=new Records();
        record.setVisible(true);
        try {
            record.createTable();
        record.createTwoPlayer_Table();}
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b00;
    private javax.swing.JButton b01;
    private javax.swing.JButton b02;
    private javax.swing.JButton b10;
    private javax.swing.JButton b11;
    private javax.swing.JButton b12;
    private javax.swing.JButton b20;
    private javax.swing.JButton b21;
    private javax.swing.JButton b22;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    private void showMessageDialog(String newname, String computer_Won_The_Game_Give_It_A_Try_Again) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
